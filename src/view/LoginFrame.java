/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;



import java.awt.Component;
import java.awt.Container;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.*;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import model.ExpertProgrammer;
import model.Programmer;
import utils.SoundClass;






/**
 *
 * @author Aviad
 */
public class LoginFrame extends javax.swing.JFrame {
    
    /**
     * 
    */
    private static final long serialVersionUID = 1L;
	//***************************************** Variables *********************************************
    private Programmer programmer = null;
    /**ViewLogic field*/
    private ViewLogic view;
    
     //***************************************** Constructor *********************************************
         
    /**
     * Creates new form ViewLogic
     * @param viewLogic
     */
    public LoginFrame(ViewLogic viewLogic) { 
        this.view = viewLogic;
        initComponents();
        setVisible(true);
        setResizable(false);
        setLocationRelativeTo(null);
        this.user.requestFocusInWindow();
        setTitle("Welcome");
        this.errLabel.setVisible(false);
        this.errLabel1.setVisible(false);
        }

     //***************************************** Methods *********************************************
    
    /**
     * sound method, will allow to play sound when necessary
     * @param fileName
     */
    public void soundMethod(String fileName) {       // this is the method that handling the sound effect of the program.
        try {
            AudioInputStream audio = AudioSystem.getAudioInputStream(getClass().getResource(fileName));
            Clip clip = AudioSystem.getClip();
            clip.open(audio);
            clip.start();
        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error Sound File", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        logButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        errLabel = new javax.swing.JLabel();
        errLabel1 = new javax.swing.JLabel();
        loginJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setPreferredSize(new java.awt.Dimension(403, 650));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        getContentPane().setLayout(null);

        userLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        userLabel.setForeground(new java.awt.Color(255, 255, 255));
        userLabel.setText("User ID:");
        getContentPane().add(userLabel);
        userLabel.setBounds(50, 220, 65, 30);

        passLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        passLabel.setForeground(new java.awt.Color(255, 255, 255));
        passLabel.setText("Password:");
        getContentPane().add(passLabel);
        passLabel.setBounds(50, 270, 90, 30);

        user.setBackground(new java.awt.Color(102, 102, 102));
        user.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setToolTipText("Enter User Name Here");
        user.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(0, 0, 0)));
        user.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userFocusGained(evt);
            }
        });
        user.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userKeyPressed(evt);
            }
        });
        getContentPane().add(user);
        user.setBounds(170, 220, 150, 30);

        logButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        logButton.setText("LOGIN");
        logButton.setToolTipText("Click here to login");
        logButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logButtonActionPerformed(evt);
            }
        });
        getContentPane().add(logButton);
        logButton.setBounds(50, 540, 90, 30);

        resetButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        resetButton.setText("RESET");
        resetButton.setToolTipText("Click here to reset fieldes");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton);
        resetButton.setBounds(230, 540, 90, 30);

        passwordField.setBackground(new java.awt.Color(102, 102, 102));
        passwordField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        passwordField.setForeground(new java.awt.Color(255, 255, 255));
        passwordField.setToolTipText("Enter Password Here");
        passwordField.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(0, 0, 0)));
        passwordField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        passwordField.setPreferredSize(new java.awt.Dimension(2, 22));
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFieldFocusGained(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });
        getContentPane().add(passwordField);
        passwordField.setBounds(170, 270, 150, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login-pageee.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 40, 320, 80);

        errLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        errLabel.setForeground(new java.awt.Color(204, 0, 0));
        errLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        getContentPane().add(errLabel);
        errLabel.setBounds(60, 320, 240, 20);

        errLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        errLabel1.setForeground(new java.awt.Color(204, 0, 0));
        errLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        getContentPane().add(errLabel1);
        errLabel1.setBounds(60, 320, 240, 20);

        loginJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BlackWood.jpg"))); // NOI18N
        loginJLabel.setText("hi noob");
        loginJLabel.setPreferredSize(new java.awt.Dimension(403, 650));
        getContentPane().add(loginJLabel);
        loginJLabel.setBounds(0, 0, 403, 650);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        user.setText("");
        passwordField.setText("");
    }//GEN-LAST:event_resetButtonActionPerformed

    private void logButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logButtonActionPerformed
              if(!user.getText().isEmpty() || !String.valueOf(passwordField.getPassword()).isEmpty()){
        if(user.getText().equals("admin") && String.valueOf(passwordField.getPassword()).equals("admin")){
           frmControlPanel controlPanel = new frmControlPanel();
           controlPanel.setVisible(true);
           this.setVisible(false);
           this.dispose();   
       }
       else if(view.getAProgrammerById(user.getText()) != null){
           this.programmer = view.getAProgrammerById(user.getText());
           if(this.programmer.getPassword().equals(String.valueOf(passwordField.getPassword()))){
                final JDialog frame=view.getAnimation(this);
            	  final JFrame curr=this;
                  new Thread(new Runnable(){
                  	
                  @Override
                  public void run(){
                     //time consuming algorithm.
                     enableComponents(curr,false);
                     if(programmer instanceof ExpertProgrammer){
            	  ViewLogic.setLogEuser((ExpertProgrammer)programmer);
                     }
                     else
                     {
                         ViewLogic.setLogUser(programmer);
                     }
                      UserMain main = new UserMain();
                      main.setVisible(true);

                      curr.setVisible(false);
                      curr.dispose(); 
                       SwingUtilities.invokeLater(new Runnable(){
                           @Override public void run(){
                        	   enableComponents(curr,true);
                          	 frame.dispose(); 
                                 curr.setVisible(false);
                  curr.dispose();      
         	
                         }
                        });
                     
                  }
                  }).start();
              }else{
               sound("/sounds/errorSound.wav");
               this.errLabel.setText("Wrong UserID Or Password");
               this.errLabel.setVisible(true);    
           }  
       }else{
        sound("/sounds/errorSound.wav");
        this.errLabel.setText("Wrong UserID Or Password");
          this.errLabel.setVisible(true);   
       }
       }else{
          sound("/sounds/errorSound.wav");
          this.errLabel.setText("You Must Fill All Fields!");
          this.errLabel.setVisible(true);
       }
    }//GEN-LAST:event_logButtonActionPerformed

    private void userKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userKeyPressed
        
    }//GEN-LAST:event_userKeyPressed

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        
    }//GEN-LAST:event_passwordFieldKeyPressed

    private void userFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userFocusGained
        this.errLabel.setText("");
        this.errLabel.setVisible(false);
    }//GEN-LAST:event_userFocusGained

    private void passwordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusGained
        this.errLabel.setText("");
        this.errLabel.setVisible(false);
    }//GEN-LAST:event_passwordFieldFocusGained

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        if(Toolkit.getDefaultToolkit().getLockingKeyState(KeyEvent.VK_CAPS_LOCK)){
            this.errLabel1.setText("Caps Lock Is ON!");
            this.errLabel1.setVisible(true);
        }else{
            this.errLabel1.setText("");
            this.errLabel1.setVisible(false);
        }
    }//GEN-LAST:event_formMouseMoved

        /**
     * the method gets address of sound file and return the sound for play.
     * @param soundAddress
     * @return sound
     */
    public SoundClass sound(String soundAddress) {          ///////// sound method
        SoundClass sound = new SoundClass(soundAddress);
        return sound;
    }
    
       public void enableComponents(Container container, boolean enable) {
        Component[] components = container.getComponents();
        for (Component component : components) {
            component.setEnabled(enable);
            if (component instanceof Container) {
                enableComponents((Container)component, enable);
            }
        }
    }
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new LoginFrame().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errLabel;
    private javax.swing.JLabel errLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton logButton;
    private javax.swing.JLabel loginJLabel;
    private javax.swing.JLabel passLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JButton resetButton;
    public javax.swing.JTextField user;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables


}
