/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import model.CodeReview;
import utils.E_ScoreManager;
import utils.StarRater;

/**
 *
 * @author Aviad
 */
public class frmDisplayReview extends javax.swing.JFrame {

    /**view field*/
    private ViewLogic view;
    
    private CodeReview codeReview;
    
    private frmReviewCodeEditor reviewCodeEditor;
    
    private UserMain userMain;
    /**
     * Creates new form frmDisplayReview
     * @param userMain
     * @param view
     * @param codeReview
     */
    public frmDisplayReview(UserMain userMain, ViewLogic view, CodeReview codeReview) {
        this.userMain = userMain;
        this.view = view;
        this.codeReview = codeReview;
        initComponents();
        setLocation();
        this.setTitle("Display Review"); //the title of the frame
        this.lbAuthor.setText("Author: "+this.codeReview.getReviewer().getFirstName()+" "+ this.codeReview.getReviewer().getLastName());
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        this.lbPublished.setText("Published In: "+formatter.format(this.codeReview.getDate()));
        ((StarRater)starRater).setEnabled(false);
        ((StarRater)starRater).setSelection(codeReview.getCodeRating());
        if(this.codeReview.getBugs() != null && this.codeReview.getBugs().size() > 0 ){
        for(int i = 0; i < this.codeReview.getBugs().size(); i++)
            {
            cbBugs.addItem(i+1);
            }
        }
        taSuggestionsAndTips.setText(this.codeReview.getSuggestionTips());
    }
    
    private void setLocation(){
       setLocationRelativeTo(null);
    }
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tadescription = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        starRater = new StarRater(5,0);
        lbAuthor = new javax.swing.JLabel();
        lbBugs = new javax.swing.JLabel();
        cbBugs = new javax.swing.JComboBox<>();
        lbPublished = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnDisplayCode = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        taSuggestionsAndTips = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        btnDone = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setMinimumSize(new java.awt.Dimension(425, 680));
        setPreferredSize(new java.awt.Dimension(425, 680));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        tadescription.setEditable(false);
        tadescription.setBackground(new java.awt.Color(102, 102, 102));
        tadescription.setColumns(20);
        tadescription.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tadescription.setForeground(new java.awt.Color(255, 255, 255));
        tadescription.setRows(5);
        jScrollPane1.setViewportView(tadescription);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 193, 390, 160);

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Quality rating:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 124, 109, 21);

        javax.swing.GroupLayout starRaterLayout = new javax.swing.GroupLayout(starRater);
        starRater.setLayout(starRaterLayout);
        starRaterLayout.setHorizontalGroup(
            starRaterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 106, Short.MAX_VALUE)
        );
        starRaterLayout.setVerticalGroup(
            starRaterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        getContentPane().add(starRater);
        starRater.setBounds(137, 124, 106, 21);

        lbAuthor.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lbAuthor.setForeground(new java.awt.Color(255, 255, 255));
        lbAuthor.setText("<Author>");
        getContentPane().add(lbAuthor);
        lbAuthor.setBounds(10, 26, 280, 21);

        lbBugs.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lbBugs.setForeground(new java.awt.Color(255, 255, 255));
        lbBugs.setText("Bugs:");
        getContentPane().add(lbBugs);
        lbBugs.setBounds(10, 156, 43, 21);

        cbBugs.setBackground(new java.awt.Color(102, 102, 102));
        cbBugs.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cbBugs.setForeground(new java.awt.Color(255, 255, 255));
        cbBugs.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBugsItemStateChanged(evt);
            }
        });
        getContentPane().add(cbBugs);
        cbBugs.setBounds(71, 157, 50, 21);

        lbPublished.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lbPublished.setForeground(new java.awt.Color(255, 255, 255));
        lbPublished.setText("<Published>");
        getContentPane().add(lbPublished);
        lbPublished.setBounds(10, 58, 280, 21);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Display code:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 90, 103, 21);

        btnDisplayCode.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDisplayCode.setText("...");
        btnDisplayCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayCodeActionPerformed(evt);
            }
        });
        getContentPane().add(btnDisplayCode);
        btnDisplayCode.setBounds(137, 90, 26, 23);

        taSuggestionsAndTips.setEditable(false);
        taSuggestionsAndTips.setBackground(new java.awt.Color(102, 102, 102));
        taSuggestionsAndTips.setColumns(20);
        taSuggestionsAndTips.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        taSuggestionsAndTips.setForeground(new java.awt.Color(255, 255, 255));
        taSuggestionsAndTips.setRows(5);
        jScrollPane2.setViewportView(taSuggestionsAndTips);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 396, 390, 160);

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Suggestions and tips:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 369, 164, 21);

        btnDone.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });
        getContentPane().add(btnDone);
        btnDone.setBounds(149, 594, 90, 27);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Grey-Background.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 420, 650);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDisplayCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayCodeActionPerformed
        reviewCodeEditor = new frmReviewCodeEditor(this.getLocationOnScreen(),this.getWidth()+5,this.codeReview.getFile().getFileAttached());
        reviewCodeEditor.setVisible(true);
    }//GEN-LAST:event_btnDisplayCodeActionPerformed

    private void cbBugsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBugsItemStateChanged
        this.tadescription.setText(this.codeReview.getBugs().get(cbBugs.getSelectedIndex()).getBugsDescription());
    }//GEN-LAST:event_cbBugsItemStateChanged

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        if(!ViewLogic.getIsExpert()||(ViewLogic.getIsExpert() && !codeReview.getReviewer().getId().equals(ViewLogic.getLogEuser().getId()))){
        if(JOptionPane.showConfirmDialog(null, "Was This Review Helpful ?", "Was Helpful", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION ){
            view.UpdateScore(codeReview.getReviewer(),E_ScoreManager.USE_REVIEW_KNOWLEDGE);
             this.userMain.RefreshScore();
            if(reviewCodeEditor!=null)
            {
                reviewCodeEditor.dispose();
            }
              this.userMain.setVisible(true);
              
              this.dispose();
        }else{
            if(reviewCodeEditor!=null)
            {
                reviewCodeEditor.dispose();
            }
            this.userMain.setVisible(true);
            
            dispose();
        }
        }else{
            if(reviewCodeEditor!=null)
            {
                reviewCodeEditor.dispose();
            }
            this.userMain.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnDoneActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       if(!ViewLogic.getIsExpert()||(ViewLogic.getIsExpert() && !codeReview.getReviewer().getId().equals(ViewLogic.getLogEuser().getId()))){
        if(JOptionPane.showConfirmDialog(null, "Was This Review Helpful ?", "Was Helpful", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION ){
            view.UpdateScore(E_ScoreManager.USE_REVIEW_KNOWLEDGE);
            this.userMain.RefreshScore();
            if(reviewCodeEditor!=null)
            {
                reviewCodeEditor.dispose();
            }
              this.userMain.setVisible(true);
              
              this.dispose();
        }else{
            if(reviewCodeEditor!=null)
            {
                reviewCodeEditor.dispose();
            }
            this.userMain.setVisible(true);
            
            dispose();
        }
        }else{
            if(reviewCodeEditor!=null)
            {
                reviewCodeEditor.dispose();
            }
            this.userMain.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frmDisplayReview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frmDisplayReview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frmDisplayReview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frmDisplayReview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new frmDisplayReview().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisplayCode;
    private javax.swing.JButton btnDone;
    private javax.swing.JComboBox<Integer> cbBugs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbAuthor;
    private javax.swing.JLabel lbBugs;
    private javax.swing.JLabel lbPublished;
    private javax.swing.JPanel starRater;
    private javax.swing.JTextArea taSuggestionsAndTips;
    private javax.swing.JTextArea tadescription;
    // End of variables declaration//GEN-END:variables
}
