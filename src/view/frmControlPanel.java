/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Component;
import java.awt.Container;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author Aviad
 */
public class frmControlPanel extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**view field*/
    private ViewLogic view;
    /**
     * Creates new form frmControlPanel
     */
    public frmControlPanel() {
        initComponents();
        setLocation();
        this.setTitle("Admin Control Panel"); //the title of the frame
        view = ViewLogic.getInstance();
        IfrmBackMenu backMenu = new IfrmBackMenu(view, DesktopPane);
        DesktopPane.add(backMenu);
        backMenu.show();
    }

    private void setLocation(){
       setLocationRelativeTo(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DesktopPane = new javax.swing.JDesktopPane();
        AdminMenuBar = new javax.swing.JMenuBar();
        LogOutMenu = new javax.swing.JMenu();
        ProgrammerMenu = new javax.swing.JMenu();
        menuItemAddProgrammer = new javax.swing.JMenuItem();
        menuItemRemoveProgrammer = new javax.swing.JMenuItem();
        menuItemEditProgrammer = new javax.swing.JMenuItem();
        TeamMenu = new javax.swing.JMenu();
        MenuItemAddTeam = new javax.swing.JMenuItem();
        MenuItemRemoveTeam = new javax.swing.JMenuItem();
        MenuItemEditTeam = new javax.swing.JMenuItem();
        ManageMenu = new javax.swing.JMenu();
        MenuItemManageTeamMembers = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Control Panel");
        setResizable(false);

        javax.swing.GroupLayout DesktopPaneLayout = new javax.swing.GroupLayout(DesktopPane);
        DesktopPane.setLayout(DesktopPaneLayout);
        DesktopPaneLayout.setHorizontalGroup(
            DesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1071, Short.MAX_VALUE)
        );
        DesktopPaneLayout.setVerticalGroup(
            DesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 618, Short.MAX_VALUE)
        );

        AdminMenuBar.setBackground(new java.awt.Color(204, 204, 204));
        AdminMenuBar.setForeground(new java.awt.Color(204, 204, 204));
        AdminMenuBar.setPreferredSize(new java.awt.Dimension(124, 35));

        LogOutMenu.setText("LogUot");
        LogOutMenu.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        LogOutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogOutMenuMouseClicked(evt);
            }
        });
        LogOutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutMenuActionPerformed(evt);
            }
        });
        AdminMenuBar.add(LogOutMenu);

        ProgrammerMenu.setText("Programmer");
        ProgrammerMenu.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        ProgrammerMenu.setMargin(new java.awt.Insets(0, 10, 0, 0));

        menuItemAddProgrammer.setText("Add Programmer");
        menuItemAddProgrammer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAddProgrammerActionPerformed(evt);
            }
        });
        ProgrammerMenu.add(menuItemAddProgrammer);

        menuItemRemoveProgrammer.setText("Remove Programmer");
        menuItemRemoveProgrammer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemRemoveProgrammerActionPerformed(evt);
            }
        });
        ProgrammerMenu.add(menuItemRemoveProgrammer);

        menuItemEditProgrammer.setText("Edit Programmer");
        menuItemEditProgrammer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEditProgrammerActionPerformed(evt);
            }
        });
        ProgrammerMenu.add(menuItemEditProgrammer);

        AdminMenuBar.add(ProgrammerMenu);

        TeamMenu.setText("Team");
        TeamMenu.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        TeamMenu.setMargin(new java.awt.Insets(0, 10, 0, 0));

        MenuItemAddTeam.setText("Add Team");
        MenuItemAddTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemAddTeamActionPerformed(evt);
            }
        });
        TeamMenu.add(MenuItemAddTeam);

        MenuItemRemoveTeam.setText("Remove Team");
        MenuItemRemoveTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemRemoveTeamActionPerformed(evt);
            }
        });
        TeamMenu.add(MenuItemRemoveTeam);

        MenuItemEditTeam.setText("Edit Team");
        MenuItemEditTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemEditTeamActionPerformed(evt);
            }
        });
        TeamMenu.add(MenuItemEditTeam);

        AdminMenuBar.add(TeamMenu);

        ManageMenu.setText("Manage");
        ManageMenu.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        ManageMenu.setMargin(new java.awt.Insets(0, 10, 0, 0));

        MenuItemManageTeamMembers.setText("Manage Team Members");
        MenuItemManageTeamMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemManageTeamMembersActionPerformed(evt);
            }
        });
        ManageMenu.add(MenuItemManageTeamMembers);

        AdminMenuBar.add(ManageMenu);

        setJMenuBar(AdminMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DesktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DesktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemAddProgrammerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAddProgrammerActionPerformed
       final JDialog frame=view.getAnimation(this);
       final JFrame curr=this;
        new Thread(new Runnable(){
        	
        @Override
        public void run(){
           //time consuming algorithm.
        	enableComponents(curr, false);
        	  final IfrmAddProgrammer addProgrammer = new IfrmAddProgrammer(view, DesktopPane);
        DesktopPane.add(addProgrammer);
        addProgrammer.show();
           
             SwingUtilities.invokeLater(new Runnable(){
                 @Override public void run(){
                	 enableComponents(curr, true);
                	 frame.dispose(); 
                	 int i=DesktopPane.getComponents().length;
                	 for(Component c:DesktopPane.getComponents())
                 	{
                 		if(!c.equals(addProgrammer))
                 		{
                 			((JInternalFrame)c).dispose();
                 		}
                 	}
                	
               }
              });
           
        }
        }).start();
    }//GEN-LAST:event_menuItemAddProgrammerActionPerformed

    private void menuItemRemoveProgrammerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemRemoveProgrammerActionPerformed
         final JDialog frame=view.getAnimation(this);
         final JFrame curr=this;
        new Thread(new Runnable(){
        	
        @Override
        public void run(){
           //time consuming algorithm.
        	enableComponents(curr, false);
        	 final IfrmRemoveProgrammer removeProgrammer = new IfrmRemoveProgrammer(view, DesktopPane);
        DesktopPane.add(removeProgrammer);
        removeProgrammer.show();
           
             SwingUtilities.invokeLater(new Runnable(){
                 @Override public void run(){
                 	enableComponents(curr, true);
                	 frame.dispose(); 
                	 int i=DesktopPane.getComponents().length;
                	 for(Component c:DesktopPane.getComponents())
                 	{
                 		if(!c.equals(removeProgrammer))
                 		{
                 			((JInternalFrame)c).dispose();
                 		}
                 	}
                	
               }
              });
           
        }
        }).start();
    }//GEN-LAST:event_menuItemRemoveProgrammerActionPerformed

    private void MenuItemAddTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemAddTeamActionPerformed
        final JDialog frame=view.getAnimation(this);
        final JFrame curr=this;
        new Thread(new Runnable(){
        	
        @Override
        public void run(){
           //time consuming algorithm.
        	enableComponents(curr, false);
        	 final IfrmAddTeam addTeam = new IfrmAddTeam(view, DesktopPane);
        DesktopPane.add(addTeam);
        addTeam.show();
           
             SwingUtilities.invokeLater(new Runnable(){
                 @Override public void run(){
                	 enableComponents(curr, true);
                	 frame.dispose(); 
                	 int i=DesktopPane.getComponents().length;
                	 for(Component c:DesktopPane.getComponents())
                    	{
                    		if(!c.equals(addTeam))
                    		{
                    			((JInternalFrame)c).dispose();
                    		}
                    	}
                	
               }
              });
           
        }
        }).start();
    }//GEN-LAST:event_MenuItemAddTeamActionPerformed

    private void MenuItemRemoveTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemRemoveTeamActionPerformed
        final JDialog frame=view.getAnimation(this);
        final JFrame curr=this;
        new Thread(new Runnable(){
        	
        @Override
        public void run(){
           //time consuming algorithm.
        	enableComponents(curr, false);
        	final IfrmRemoveTeam removeTeam = new IfrmRemoveTeam(view, DesktopPane);
        DesktopPane.add(removeTeam);
        removeTeam.show();
           
             SwingUtilities.invokeLater(new Runnable(){
                 @Override public void run(){
                	 enableComponents(curr, true);
                	 frame.dispose(); 
                	 int i=DesktopPane.getComponents().length;
                	 for(Component c:DesktopPane.getComponents())
                   	{
                   		if(!c.equals(removeTeam))
                   		{
                   			((JInternalFrame)c).dispose();
                   		}
                   	}
                	
               }
              });
           
        }
        }).start();
    }//GEN-LAST:event_MenuItemRemoveTeamActionPerformed

    private void MenuItemManageTeamMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemManageTeamMembersActionPerformed
        final JDialog frame=view.getAnimation(this);
        final JFrame curr=this;
        new Thread(new Runnable(){
        	
        @Override
        public void run(){
           //time consuming algorithm.
        	enableComponents(curr, false);
        	final IfrmManageTeamMembers manageTeamMembers = new IfrmManageTeamMembers(view, DesktopPane);
        DesktopPane.add(manageTeamMembers);
        manageTeamMembers.show();
           
             SwingUtilities.invokeLater(new Runnable(){
                 @Override public void run(){
                		enableComponents(curr, true);
                	 frame.dispose(); 
                	 int i=DesktopPane.getComponents().length;
                	 for(Component c:DesktopPane.getComponents())
                  	{
                  		if(!c.equals(manageTeamMembers))
                  		{
                  			((JInternalFrame)c).dispose();
                  		}
                  	}
                	
               }
              });
           
        }
        }).start();
    }//GEN-LAST:event_MenuItemManageTeamMembersActionPerformed

    private void menuItemEditProgrammerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEditProgrammerActionPerformed
       final JDialog frame=view.getAnimation(this);
       final JFrame curr=this;
        new Thread(new Runnable(){
        	
        @Override
        public void run(){
           //time consuming algorithm.
        	enableComponents(curr, false);
        	 final IfrmUpdateProgrammer updateProgrammer = new IfrmUpdateProgrammer(view, DesktopPane);
        DesktopPane.add(updateProgrammer);
        updateProgrammer.show();
           
             SwingUtilities.invokeLater(new Runnable(){
                 @Override public void run(){
                	 enableComponents(curr, true);
                	 frame.dispose(); 
                	 int i=DesktopPane.getComponents().length;
                	 for(Component c:DesktopPane.getComponents())
                 	{
                 		if(!c.equals(updateProgrammer))
                 		{
                 			((JInternalFrame)c).dispose();
                 		}
                 	}
                	
               }
              });
           
        }
        }).start();
    }//GEN-LAST:event_menuItemEditProgrammerActionPerformed

    private void MenuItemEditTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemEditTeamActionPerformed
         final JDialog frame=view.getAnimation(this);
         final JFrame curr=this;
        new Thread(new Runnable(){
        	
        @Override
        public void run(){
           //time consuming algorithm.
        	enableComponents(curr, false);
        	 final IfrmUpdateTeam updateTeam = new IfrmUpdateTeam(view, DesktopPane);
        DesktopPane.add(updateTeam);
        updateTeam.show();
           
             SwingUtilities.invokeLater(new Runnable(){
                 @Override public void run(){
                	 enableComponents(curr, true);
                	 frame.dispose(); 
                	 int i=DesktopPane.getComponents().length;
                	for(Component c:DesktopPane.getComponents())
                	{
                		if(!c.equals(updateTeam))
                		{
                			((JInternalFrame)c).dispose();
                		}
                	}
                	
                	
               }
              });
           
        }
        }).start();
    }//GEN-LAST:event_MenuItemEditTeamActionPerformed

    private void LogOutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LogOutMenuActionPerformed

    private void LogOutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOutMenuMouseClicked
        LoginFrame loginFrame = new LoginFrame(ViewLogic.getInstance());
       dispose();
    }//GEN-LAST:event_LogOutMenuMouseClicked

       public void enableComponents(Container container, boolean enable) {
        Component[] components = container.getComponents();
        for (Component component : components) {
            component.setEnabled(enable);
            if (component instanceof Container) {
                enableComponents((Container)component, enable);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frmControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frmControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frmControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frmControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new frmControlPanel().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar AdminMenuBar;
    private javax.swing.JDesktopPane DesktopPane;
    private javax.swing.JMenu LogOutMenu;
    private javax.swing.JMenu ManageMenu;
    private javax.swing.JMenuItem MenuItemAddTeam;
    private javax.swing.JMenuItem MenuItemEditTeam;
    private javax.swing.JMenuItem MenuItemManageTeamMembers;
    private javax.swing.JMenuItem MenuItemRemoveTeam;
    private javax.swing.JMenu ProgrammerMenu;
    private javax.swing.JMenu TeamMenu;
    private javax.swing.JMenuItem menuItemAddProgrammer;
    private javax.swing.JMenuItem menuItemEditProgrammer;
    private javax.swing.JMenuItem menuItemRemoveProgrammer;
    // End of variables declaration//GEN-END:variables
}
